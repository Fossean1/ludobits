local flow = require "ludobits.m.flow"

function init(self)
	msg.post(".", "acquire_input_focus")
	flow.start(function()
		print("Flow has started")
		flow.delay(0.5)
		print("flow.delay() half a second has elapsed")
		
		flow.frames(10)
		print("flow.frames() 10 frames have elapsed")

		go.animate(".", "position.x", go.PLAYBACK_ONCE_FORWARD, 300, go.EASING_INOUTCUBIC, 1, 0)
		flow.until_true(function()
			return go.get_position().x == 300
		end)
		print("flow.until_true() go.animate() done")

		flow.go_animate(".", "position.y", go.PLAYBACK_ONCE_PINGPONG, 400, go.EASING_INOUTCUBIC, 1, 0)
		print("flow.go_animate() done")
		
		msg.post("#", "fooo")
		local message_id, message, sender = flow.until_any_message()
		print("flow.until_any_message()", message_id, message, sender)
		
		msg.post("#", "booo")
		local message_id, message, sender = flow.until_message(hash("booo"))
		print("flow.until_message()", message_id, message, sender)
		
		local self, id, response = flow.until_callback(function(callback)
			http.request("http://www.google.com", "GET", callback)
		end)
		print("flow.until_callback() http.request() with callback done")
		pprint(response)
		
		local foo, bar = flow.until_callback(function(callback)
			callback("foo", "bar")
		end)
		print("flow.until_callback() immediate callback", foo, bar)
		
		print("DONE")
	end)
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	flow.update()
end

function on_message(self, message_id, message, sender)
	flow.on_message(message_id, message, sender)
end

function on_input(self, action_id, action)
	if action.released then
		print("stopping")
		flow.stop(msg.url())
	end
end
